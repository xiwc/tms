{"version":3,"sources":["app.js","environment.js","main.js","common/common-utils.js","resources/config.js","resources/index.js","user/user-pwd-reset.js","user/user-register.js","C:/Users/xi/Desktop/code/tms/src/main/resources/static/page/src/app.html","C:/Users/xi/Desktop/code/tms/src/main/resources/static/page/src/app.css","C:/Users/xi/Desktop/code/tms/src/main/resources/static/page/src/user/user-pwd-reset.css","C:/Users/xi/Desktop/code/tms/src/main/resources/static/page/src/user/user-register.css","C:/Users/xi/Desktop/code/tms/src/main/resources/static/page/src/user/user-pwd-reset.html","C:/Users/xi/Desktop/code/tms/src/main/resources/static/page/src/user/user-register.html"],"names":["App","window","toastr","wurl","utils","init","_","extend","$","fn","form","settings","prompt","empty","checked","email","url","regExp","integer","decimal","number","is","isExactly","not","notExactly","contain","containExactly","doesntContain","doesntContainExactly","minLength","length","exactLength","maxLength","match","different","creditCard","minCount","exactCount","maxCount","configureRouter","config","router","map","route","name","moduleId","nav","title","redirect","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","CommonUtils","getBaseUrl","urlQuery","Config","initHttp","json","param","console","log","JSON","stringify","http","container","root","get","withDefaults","credentials","headers","withInterceptor","request","req","requestError","response","resp","done","ok","data","error","message","status","responseError","initToastr","options","positionClass","preventDuplicates","context","UserPwdReset","mail","pwd","isReq","token","resetPwdHandler","fm","fetch","method","body","baseUrl","path","success","delay","location","newPwdHandler","fm2","attached","on","inline","fields","ViewModel","header","activate","params","routeConfig","navigationInstruction","id","username","identifier","rules","type","value","okHandler"],"mappings":"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","file":"app-bundle.js","sourcesContent":["// import 'wlzc-semantic-ui';\r\nimport 'semantic-ui';\r\nimport {\r\n    default as toastr\r\n}\r\nfrom 'toastr';\r\nimport {\r\n    default as wurl\r\n}\r\nfrom 'wurl';\r\nimport 'lodash';\r\nimport utils from 'common/common-utils';\r\n\r\nexport class App {\r\n    constructor() {\r\n        window.toastr = toastr;\r\n        window.wurl = wurl;\r\n        window.utils = utils;\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        // ui form 验证提示信息国际化\r\n        _.extend($.fn.form.settings.prompt, {\r\n            empty: '{name}不能为空',\r\n            checked: '{name}必须被勾选',\r\n            email: '{name}必须是正确的邮件格式',\r\n            url: '{name}必须是正确的URL格式',\r\n            regExp: '{name}验证格式不正确',\r\n            integer: '{name}必须为一个整数',\r\n            decimal: '{name}必须为一个小数',\r\n            number: '{name}必须设置为一个数字',\r\n            is: '{name}必须符合规则\"{ruleValue}\"',\r\n            isExactly: '{name}必须精确匹配\"{ruleValue}\"',\r\n            not: '{name}不能设置为\"{ruleValue}\"',\r\n            notExactly: '{name}不能准确设置为\"{ruleValue}\"',\r\n            contain: '{name}需要包含\"{ruleValue}\"',\r\n            containExactly: '{name}需要精确包含\"{ruleValue}\"',\r\n            doesntContain: '{name}不能包含\"{ruleValue}\"',\r\n            doesntContainExactly: '{name}不能精确包含\"{ruleValue}\"',\r\n            minLength: '{name}必须至少包含{ruleValue}个字符',\r\n            length: '{name}必须为{ruleValue}个字符',\r\n            exactLength: '{name}必须为{ruleValue}个字符',\r\n            maxLength: '{name}必须不能超过{ruleValue}个字符',\r\n            match: '{name}必须匹配{ruleValue}字段',\r\n            different: '{name}必须不同于{ruleValue}字段',\r\n            creditCard: '{name}必须是一个正确的信用卡数字格式',\r\n            minCount: '{name}必须至少包含{ruleValue}个选择项',\r\n            exactCount: '{name}必须准确包含{ruleValue}个选择项',\r\n            maxCount: '{name} 必须有{ruleValue}或者更少个选择项'\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 配置路由\r\n     * @param  {[object]} config 路由配置\r\n     * @param  {[object]} router 路由\r\n     */\r\n    configureRouter(config, router) {\r\n\r\n        config.map([{\r\n            route: ['pwd-reset'],\r\n            name: 'reset',\r\n            moduleId: 'user/user-pwd-reset',\r\n            nav: false,\r\n            title: '密码重置'\r\n        }, {\r\n            route: ['register'],\r\n            name: 'register',\r\n            moduleId: 'user/user-register',\r\n            nav: false,\r\n            title: '用户注册'\r\n        }, {\r\n            route: '',\r\n            redirect: 'pwd-reset'\r\n        }]);\r\n\r\n        this.router = router;\r\n\r\n    }\r\n}\r\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class CommonUtils {\r\n\r\n    /**\r\n     * 获取浏览器BaseUrl\r\n     * @return {[type]} [description]\r\n     */\r\n    getBaseUrl() {\r\n        if (typeof wurl == 'function') {\r\n            if (wurl('port') == 80 || wurl('port') == 443) {\r\n                return (wurl('protocol') + '://' + wurl('hostname'));\r\n            } else {\r\n                return (wurl('protocol') + '://' + wurl('hostname') + ':' + wurl('port'));\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * 获取url中的查询参数值\r\n     * @param  {[type]} name 查询参数名称\r\n     * @return {[type]}      查询参数值\r\n     */\r\n    urlQuery(name) {\r\n        return wurl('?' + name) || wurl('?' + name, wurl('hash'));\r\n    }\r\n}\r\n\r\nexport default new CommonUtils();\r\n","import 'isomorphic-fetch';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\nimport { inject, Lazy } from 'aurelia-framework';\r\n\r\nimport {\r\n    default as toastr\r\n}\r\nfrom 'toastr';\r\nimport {\r\n    default as NProgress\r\n}\r\nfrom 'nprogress';\r\n\r\nexport class Config {\r\n\r\n    initHttp() {\r\n    \twindow.json = (param) => {\r\n            console.log(JSON.stringify(param));\r\n            return json(param);\r\n        };\r\n        window.http = this.aurelia.container.root.get(HttpClient);\r\n        http.configure(config => {\r\n            config\r\n            // .withBaseUrl(nsParam.baseUrl)\r\n                .withDefaults({\r\n                    credentials: 'same-origin',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        'X-Requested-With': 'fetch'\r\n                    }\r\n                })\r\n                .withInterceptor({\r\n                    request(req) {\r\n                        NProgress && NProgress.start();\r\n                        return req;\r\n                    },\r\n                    requestError(req) {\r\n                        console.log(req);\r\n                    },\r\n                    response(resp) {\r\n                        NProgress && NProgress.done();\r\n                        if (!resp.ok) {\r\n                            resp.json().then((data) => {\r\n                                // toastr.error('PATH: ' + data.path + '<br/>STATUS: ' + data.status + '<br/>EXCEPTION:<br/>' + data.exception + '<br/>MESSAGE:<br/>' + data.message, data.error);\r\n                                toastr.error(data.message);\r\n                            });\r\n\r\n                            if (resp.status == 401) {\r\n                                toastr.error('用户未登录!');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        return resp;\r\n                    },\r\n                    responseError(resp) {\r\n                        toastr.error(resp.message, '网络请求错误!');\r\n                        console.log(resp);\r\n                    }\r\n                });\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    initToastr() {\r\n\r\n        // toastr弹出消息提示插件全局配置设置\r\n        toastr.options.positionClass = 'toast-bottom-center';\r\n        toastr.options.preventDuplicates = true;\r\n    }\r\n\r\n    context(aurelia) {\r\n        this.aurelia = aurelia;\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nexport default new Config();\r\n","import config from './config';\n\nexport function configure(aurelia) {\n\n    config.context(aurelia).initHttp().initToastr();\n\n    //config.globalResources([]);\n}\n","/**\r\n * 用户密码重置\r\n */\r\nexport class UserPwdReset {\r\n\r\n    mail = '';\r\n    pwd = '';\r\n\r\n    isReq = false;\r\n\r\n    token = utils.urlQuery('id');\r\n\r\n    resetPwdHandler() {\r\n\r\n        if (!$(this.fm).form('is valid')) {\r\n            toastr.error('邮件地址输入不合法!');\r\n            return;\r\n        }\r\n\r\n        this.isReq = true;\r\n        http.fetch('/free/user/pwd/reset', {\r\n            method: 'post',\r\n            body: json({\r\n                mail: this.mail,\r\n                baseUrl: utils.getBaseUrl(),\r\n                path: wurl('path')\r\n            })\r\n        }).then((resp) => {\r\n            if (resp.ok) {\r\n                resp.json().then((data) => {\r\n                    if (data.success) {\r\n                        toastr.success('重置密码邮件链接发送成功!');\r\n                        _.delay(() => {\r\n                            window.location = \"/admin/login\";\r\n                        }, 2000);\r\n                    } else {\r\n                        toastr.error(data.data, '重置密码邮件链接发送失败!');\r\n                        this.isReq = false;\r\n                    }\r\n                });\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    newPwdHandler() {\r\n\r\n        if (!$(this.fm2).form('is valid')) {\r\n            toastr.error('新密码输入不合法!');\r\n            return;\r\n        }\r\n\r\n        this.isReq = true;\r\n        http.fetch('/free/user/pwd/new', {\r\n            method: 'post',\r\n            body: json({\r\n                token: this.token,\r\n                pwd: this.pwd\r\n            })\r\n        }).then((resp) => {\r\n            if (resp.ok) {\r\n                resp.json().then((data) => {\r\n                    if (data.success) {\r\n                        toastr.success('重置密码成功!');\r\n                        _.delay(() => {\r\n                            window.location = \"/admin/login\";\r\n                        }, 2000);\r\n                    } else {\r\n                        toastr.error(data.data, '重置密码失败!');\r\n                        this.isReq = false;\r\n                    }\r\n                });\r\n            }\r\n            \r\n        });\r\n    }\r\n\r\n    /**\r\n     * 当视图被附加到DOM中时被调用\r\n     */\r\n    attached() {\r\n\r\n        $(this.fm).form({\r\n            on: 'blur',\r\n            inline: true,\r\n            fields: {\r\n                mail: ['empty', 'email']\r\n            }\r\n        });\r\n\r\n        $(this.fm2).form({\r\n            on: 'blur',\r\n            inline: true,\r\n            fields: {\r\n                mail: ['empty', 'minLength[8]']\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","/**\r\n * 账户注册\r\n */\r\nexport class ViewModel {\r\n\r\n    header = '账户激活页面';\r\n\r\n    /**\r\n     * 在视图模型(ViewModel)展示前执行一些自定义代码逻辑\r\n     * @param  {[object]} params                参数\r\n     * @param  {[object]} routeConfig           路由配置\r\n     * @param  {[object]} navigationInstruction 导航指令\r\n     * @return {[promise]}                      你可以可选的返回一个延迟许诺(promise), 告诉路由等待执行bind和attach视图(view), 直到你完成你的处理工作.\r\n     */\r\n    activate(params, routeConfig, navigationInstruction) {\r\n\r\n        if (params.id) {\r\n            this.token = params.id;\r\n\r\n            this.isReq = true;\r\n            this.header = '账户激活中,请稍后...!';\r\n            http.fetch('/free/user/register/activate', {\r\n                method: 'post',\r\n                body: json({\r\n                    token: this.token\r\n                })\r\n            }).then((resp) => {\r\n                if (resp.ok) {\r\n                    resp.json().then((data) => {\r\n                        if (data.success) {\r\n                            this.header = '账户激活成功,请返回登录页面登录!';\r\n                        } else {\r\n                            this.header = '账户激活失败!';\r\n                            toastr.error(data.data, '账户激活失败!');\r\n                        }\r\n                    });\r\n                    this.isReq = false;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 当视图被附加到DOM中时被调用\r\n     */\r\n    attached() {\r\n\r\n        $(this.fm).form({\r\n            on: 'blur',\r\n            inline: true,\r\n            fields: {\r\n                username: {\r\n                    identifier: 'username',\r\n                    rules: [{\r\n                        type: 'empty'\r\n                    }, {\r\n                        type: 'minLength[3]'\r\n                    }, {\r\n                        type: 'regExp',\r\n                        value: /^[a-z]+[a-z0-9\\.\\-_]*[a-z0-9]+$/,\r\n                        prompt: '小写字母数字.-_组合,字母开头,字母数字结尾'\r\n                    }]\r\n                },\r\n                pwd: {\r\n                    identifier: 'pwd',\r\n                    rules: [{\r\n                        type: 'empty'\r\n                    }, {\r\n                        type: 'minLength[8]'\r\n                    }]\r\n                },\r\n                name: {\r\n                    identifier: 'name',\r\n                    rules: [{\r\n                        type: 'empty'\r\n                    }, {\r\n                        type: 'maxLength[20]'\r\n                    }]\r\n                },\r\n                mail: {\r\n                    identifier: 'mail',\r\n                    rules: [{\r\n                        type: 'empty'\r\n                    }, {\r\n                        type: 'email'\r\n                    }]\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    okHandler() {\r\n\r\n        if (!$(this.fm).form('is valid')) {\r\n            toastr.error('账户注册信息输入不合法!');\r\n            return;\r\n        }\r\n\r\n        this.isReq = true;\r\n        http.fetch('/free/user/register', {\r\n            method: 'post',\r\n            body: json({\r\n                username: this.username,\r\n                pwd: this.pwd,\r\n                name: this.name,\r\n                mail: this.mail,\r\n                baseUrl: utils.getBaseUrl(),\r\n                path: wurl('path')\r\n            })\r\n        }).then((resp) => {\r\n            if (resp.ok) {\r\n                resp.json().then((data) => {\r\n                    if (data.success) {\r\n                        toastr.success('注册成功,请通过接收到的激活邮件激活账户!');\r\n                        _.delay(() => {\r\n                            window.location = \"/admin/login\";\r\n                        }, 2000);\r\n                    } else {\r\n                        toastr.error(data.data, '注册失败!');\r\n                        this.isReq = false;\r\n                    }\r\n                });\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n}\r\n",null,null,null,null,null,null],"sourceRoot":"..\\src"}